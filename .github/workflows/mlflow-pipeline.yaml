name: MLflow CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Annuler les exécutions précédentes lorsqu'un nouveau commit est poussé
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-train:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Augmenter le timeout à 30 minutes
    strategy:
      matrix:
        python-version: ["3.9"]  # Réduire à une seule version pour tester

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Activer le cache pip pour accélérer l'installation
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        # Installer d'abord les dépendances lourdes séparément
        pip install numpy pandas scikit-learn
        # Puis installer le reste
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest tests/ -v --tb=short
    
    - name: Train model with MLflow
      run: |
        python models/train_model.py
    
    - name: Save metrics
      run: |
        mkdir -p mlflow_output
        cat mlflow_output/metrics.txt
    
    - name: Upload metrics as artifact
      uses: actions/upload-artifact@v4
      with:
        name: model-metrics-${{ github.run_id }}
        path: mlflow_output/metrics.txt